apiVersion: v1

# k8s deployment object
kind: PersistentVolumeClaim
metadata:
  name: influxdb-pvc
  # labels for future selection
  labels:
      app   : influxdb
      owner : aherlind
spec:
  # gives read write access in a single node
  accessModes:
  - ReadWriteOnce
    # config
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1

# k8s deployment object
kind: Deployment
metadata:
  name: influxdb-deployment
  # labels for future selection
  labels:
    app: influxdb
spec:
  # pods updating strategy
  strategy:
    # type RollingUpdate updates pods smoothly
    type: RollingUpdate
    rollingUpdate:
      # maximum count of unavailable pods
      maxUnavailable: 1
      # over the desired amount of pods
      maxSurge: 1
  # select pods
  selector:
    # choose with labels
    matchLabels:
      app: influxdb
  # pods template for creating
  template:
    metadata:
      # labels for future selection
      labels:
          app: influxdb
    # configs for containers
    spec:
      # use volume
      volumes:
      - name: influxdb-volume
        persistentVolumeClaim:
          claimName: influxdb-pvc
      containers:
      - name: influxdb
        # docker image for container
        image: influxdb
        # turn off pulling on DockerHub
        imagePullPolicy: Never
        # open ports in container
        ports:
        - containerPort: 8086
        # mount storage path
        volumeMounts:
        - mountPath: "/var/lib/influxdb"
          name: influxdb-volume

---

apiVersion: v1

# k8s deployment object
kind: Service
metadata:
  name: influxdb-service
  # labels for future selection
  labels:
      app  : influxdb
      owner: aherlind
spec:
  # type ClusterIp gives access to another services
  type: ClusterIP
  # choose with labels
  selector:
    app: influxdb
  ports:
  - name: http
    # redirect incoming request from port
    port: 8086
    # send incoming request to container with port
    targetPort: 8086
