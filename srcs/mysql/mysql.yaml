apiVersion: v1

# k8s deployment object
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  # labels for future selection
  labels:
      app  : mysql
      owner: aherlind
spec:
  # gives read write access in a single node
  accessModes:
  - ReadWriteOnce
  # config
  resources:
    requests:
      # storage size
      storage: 1Gi

---

apiVersion: apps/v1

# k8s deployment object
kind: Deployment
metadata:
  name: mysql-deployment
  # labels for future selection
  labels:
    app  : mysql
    owner: aherlind
spec:
  # pods updating strategy
  strategy:
    # type RollingUpdate updates pods smoothly
    type: RollingUpdate
    rollingUpdate:
      # maximum count of unavailable pods
      maxUnavailable: 1
      # over the desired amount of pods
      maxSurge: 1
  # select pods
  selector:
    # choose with labels
    matchLabels:
      app: mysql
  # pods template for creating
  template:
    metadata:
      # labels for future selection
      labels:
        app: mysql
    # configs for containers
    spec:
      # use volume
      volumes:
      - name: mysql-volume
        persistentVolumeClaim:
          claimName: mysql-pvc
      containers:
      - name           : mysql
        # docker image for container
        image          : mysql
        # turn off pulling on DockerHub
        imagePullPolicy: Never
        # open ports in container
        ports:
        - containerPort: 3306
        # mount storage path
        volumeMounts   :
        - mountPath: "/var/lib/mysql"
          name     : mysql-volume

---

apiVersion: v1

# k8s deployment object
kind: Service
metadata:
  name: mysql-service
  # labels for future selection
  labels:
      app  : mysql
      owner: aherlind
spec:
  # type ClusterIp gives access to another services
  type: ClusterIP
  selector:
    # gives access to mysql
    app: mysql
  ports:
  - name      : http
    # redirect incoming request from port
    port      : 3306
    # send incoming request to container with port
    targetPort: 3306
